name: Deploy release
on:
  push:
    tags:
      - '\d+.\d+.\d+-\d+.\d+.\d+-SNAPSHOT'
      - '\d+.\d+.\d+-\d+.\d+.\d+'

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-trigger_on_tag
  cancel-in-progress: true

jobs:
  # This job determines the appropriate runner tag based on the repository's fork status
  # and makes these tag available as outputs for subsequent jobs.
  # this is done as only in our own repository we want to use our self-hosted runners but not on forks (as there they
  # are unavailable)
  get-runner-tags:
    name: 🏷️ Get runner tags
    runs-on: ubuntu-latest
    outputs:
      linux-runner-tag: ${{ steps.runner-tags.outputs.linux-runner-tag }}
      macos-runner-tag: ${{ steps.runner-tags.outputs.macos-runner-tag }}
      windows-runner-tag: ${{ steps.runner-tags.outputs.windows-runner-tag }}
    steps:
      - name: Clone Godot JVM module.
        uses: actions/checkout@v4

      - name: Determine Runner Tags
        id: runner-tags
        uses: ./.github/actions/get-runner-tags

  create-draft-release:
    name: 📝 Create draft release
    uses: ./.github/workflows/deploy_create_draft_release.yml
    secrets: inherit # needed so that this sub workflow can also access github secrets for this workflow

  setup-build-variables:
    name: 🛠️ Setup build variables
    runs-on: ${{ needs.get-runner-tags.outputs['linux-runner-tag'] }}
    needs:
      - create-draft-release
    steps:
      - run: |
          echo "Setup done"
    outputs: # defined here explicitly, so it only needs to be defined here. All other workflows can just reference it
      godot-kotlin-jvm-version: "0.10.0-4.3.0"
      godot-version: "4.3-stable"
      jvm-version: "17"

  build-jvm:
    name: ☕ Build Jvm
    uses: ./.github/workflows/build_jvm.yml
    needs:
      - setup-build-variables
    with:
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      jvm-version: ${{ needs.setup-build-variables.outputs['jvm-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['linux-runner-tag'] }}

  build-android:
    name: 🤖 Build and Assemble Android
    uses: ./.github/workflows/build_android.yml
    needs:
      - setup-build-variables
    with:
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      jvm-version: ${{ needs.setup-build-variables.outputs['jvm-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['linux-runner-tag'] }}

  build-ios:
    name: 🍏 Build iOS
    uses: ./.github/workflows/build_ios.yml
    needs:
      - setup-build-variables
    with:
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['macos-runner-tag'] }}

  build-linux:
    name: 🐧 Build Linux
    uses: ./.github/workflows/build_linux.yml
    needs:
      - setup-build-variables
    with:
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['linux-runner-tag'] }}

  build-macos:
    name: 🍎 Build macOS
    uses: ./.github/workflows/build_macos.yml
    needs:
      - setup-build-variables
    with:
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['macos-runner-tag'] }}

  build-windows:
    name: 🪟 Build Windows
    uses: ./.github/workflows/build_windows.yml
    needs:
      - setup-build-variables
    with:
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['windows-runner-tag'] }}

  assemble-macos:
    name: 🍎 Assemble macos
    uses: ./.github/workflows/assemble_macos.yml
    needs:
      - setup-build-variables
      - build-jvm
      - build-macos
    with:
      godot-kotlin-jvm-version: ${{ needs.setup-build-variables.outputs['godot-kotlin-jvm-version'] }}
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['macos-runner-tag'] }}

  assemble-ios:
    name: 🍏 Assemble ios
    uses: ./.github/workflows/assemble_ios.yml
    needs:
      - setup-build-variables
      - build-ios
    with:
      godot-kotlin-jvm-version: ${{ needs.setup-build-variables.outputs['godot-kotlin-jvm-version'] }}
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['macos-runner-tag'] }}

  assemble-linux:
    name: 🐧 Assemble linux
    uses: ./.github/workflows/assemble_linux.yml
    needs:
      - setup-build-variables
      - build-jvm
      - build-linux
    with:
      godot-kotlin-jvm-version: ${{ needs.setup-build-variables.outputs['godot-kotlin-jvm-version'] }}
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['linux-runner-tag'] }}

  assemble-windows:
    name: 🪟 Assemble windows
    uses: ./.github/workflows/assemble_windows.yml
    needs:
      - setup-build-variables
      - build-jvm
      - build-windows
    with:
      godot-kotlin-jvm-version: ${{ needs.setup-build-variables.outputs['godot-kotlin-jvm-version'] }}
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      # does not need to run on windows -> only packs a zip
      runner-tag: ${{ needs.get-runner-tags.outputs['linux-runner-tag'] }}

  assemble-export-templates:
    name: 🤖+🍏+🐧+🍎+🪟 Assemble export templates
    uses: ./.github/workflows/assemble_export_templates.yml
    needs:
      - setup-build-variables
      - build-android # uploads finished export template directly
      - assemble-ios # export templates need to be packed into xcode project
      - build-linux # uploads finished export template directly
      - assemble-macos # export templates need to be packed into app
      - build-windows # uploads finished export template directly
    with:
      godot-kotlin-jvm-version: ${{ needs.setup-build-variables.outputs['godot-kotlin-jvm-version'] }}
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['linux-runner-tag'] }}

  deploy-godot:
    name: 🚀 Deploy godot artifacts to Github
    uses: ./.github/workflows/deploy_godot.yml
    needs:
      - setup-build-variables
      - build-jvm
      - build-android
      - assemble-ios
      - assemble-linux
      - assemble-macos
      - assemble-windows
      - assemble-export-templates
    with:
      godot-kotlin-jvm-version: ${{ needs.setup-build-variables.outputs['godot-kotlin-jvm-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['linux-runner-tag'] }}
    secrets: inherit # needed so that this sub workflow can also access github secrets for this workflow

  deploy-jvm:
    name: 🚀 Deploy Jvm artifacts
    uses: ./.github/workflows/deploy_jvm.yml
    needs:
      - setup-build-variables
      - build-jvm
      - deploy-godot # we define an explicit dependency on the github upload in case something goes wrong there. Github release purging is easier than from maven central and the likes
    with:
      godot-kotlin-jvm-version: ${{ needs.setup-build-variables.outputs['godot-kotlin-jvm-version'] }}
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      jvm-version: ${{ needs.setup-build-variables.outputs['jvm-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['linux-runner-tag'] }}
    secrets: inherit # needed so that this sub workflow can also access github secrets for this workflow

  deploy-docs:
    name: 🚀 Deploy Docs
    uses: ./.github/workflows/deploy_docs.yml
    needs: # only if all deployments are successful we want to deploy the docs
      - deploy-godot
      - deploy-jvm
    with:
      runner-tag: ${{ needs.get-runner-tags.outputs['linux-runner-tag'] }}
    secrets: inherit # needed so that this sub workflow can also access github secrets for this workflow
