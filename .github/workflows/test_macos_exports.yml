name: üçé MacOS Exports Tests
on:
  workflow_call:
    inputs:
      godot-version:
        type: string
      jvm-version:
        type: string

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-macos_exports_tests
  cancel-in-progress: true

jobs:
  test-macos-exports:
    runs-on: macos-latest
    name: ${{ matrix.name }}
    strategy:
      matrix:
        include:
          - name: dev tests
            target: dev
            bootstrap-target: debug
          - name: release tests
            target: release
            bootstrap-target: release

    steps:
      - name: Clone Godot Engine
        uses: actions/checkout@v4
        with:
          repository: godotengine/godot
          ref: ${{ inputs.godot-version }}

      - name: Clone Godot JVM module.
        uses: actions/checkout@v4
        with:
          path: modules/kotlin_jvm

      - uses: actions/setup-java@v4
        with:
          distribution: adopt-hotspot
          java-version: ${{ inputs.jvm-version }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}

      - name: Download macos editor ${{ matrix.target }}
        uses: actions/download-artifact@v4
        with:
          name: editor_${{ matrix.target }}_macos_universal
          path: './bin'

      - name: Download godot-bootstrap ${{ matrix.bootstrap-target }}
        uses: actions/download-artifact@v4
        with:
          name: jvm_godot-bootstrap_${{ matrix.bootstrap-target }}
          path: './bin'

      - name: Download macos export template
        uses: actions/download-artifact@v4
        with:
          name: export_template_all_macos
          path: "./"

      - name: Prepare export
        run: |
          chmod +x bin/godot.*
          mkdir -p modules/kotlin_jvm/harness/tests/export
          mv export_template_all_macos.zip modules/kotlin_jvm/harness/tests/export_template_all_macos.zip

      - name: Build tests project
        run: |
          modules/kotlin_jvm/harness/tests/gradlew -p modules/kotlin_jvm/harness/tests/ build -P${{ matrix.bootstrap-target }}

      - name: Create JRE
        run: |
          cd modules/kotlin_jvm/harness/tests/
          jlink --add-modules java.base,java.logging --output jre-arm64-macos
          mkdir jre-amd64-macos #create a fake jre dir for amd64 so the export is happy. The test will run on arm anyways

      - name: Export tests
        run: |
          cd modules/kotlin_jvm/harness/tests/
          ./gradlew exportRelease
        timeout-minutes: 30

      - name: Extract app from dmg
        run: |
          cd modules/kotlin_jvm/harness/tests/export
          hdiutil attach tests.dmg
          cp -a /Volumes/tests/Godot\ Kotlin\ Tests.app Godot\ Kotlin\ Tests.app
          hdiutil detach /Volumes/tests

      - name: Run Tests
        run: |
          cd modules/kotlin_jvm/harness/tests/
          ./gradlew runExportedGutTests
        timeout-minutes: 30
