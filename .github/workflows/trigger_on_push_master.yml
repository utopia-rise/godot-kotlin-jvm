name: Master pipeline
on:
  push:
    branches:
      - master
  schedule:
      - cron: '0 0 * * 1' # run once a week on monday midnight to prevent the cache from being cleared

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-trigger_on_push_master
  cancel-in-progress: true

jobs:
  # This job determines the appropriate runner tag based on the repository's fork status
  # and makes these tag available as outputs for subsequent jobs.
  # this is done as only in our own repository we want to use our self-hosted runners but not on forks (as there they
  # are unavailable)
  get-runner-tags:
    name: 🏷️ Get runner tags
    runs-on: ubuntu-latest
    outputs:
      linux-runner-tag: ${{ steps.runner-tags.outputs.linux-runner-tag }}
      macos-runner-tag: ${{ steps.runner-tags.outputs.macos-runner-tag }}
      windows-runner-tag: ${{ steps.runner-tags.outputs.windows-runner-tag }}
    steps:
      - name: Clone Godot JVM module.
        uses: actions/checkout@v4

      - name: Determine Runner Tags
        id: runner-tags
        uses: ./.github/actions/get-runner-tags

  setup-build-variables:
    # Fake job to define outputs which can be used in the other jobs
    name: 🛠️ Setup build variables
    runs-on: ${{ needs.get-runner-tags.outputs['linux-runner-tag'] }}
    steps:
      - run: |
          echo "Setup done"
    outputs: # defined here explicitly, so it only needs to be defined here. All other workflows can just reference it
      godot-kotlin-jvm-version: "0.10.0-4.3.0"
      godot-version: "4.3-stable"
      jvm-version: "17"

  build-jvm:
    name: ☕ Build Jvm
    uses: ./.github/workflows/build_jvm.yml
    needs:
      - setup-build-variables
    with:
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      jvm-version: ${{ needs.setup-build-variables.outputs['jvm-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['linux-runner-tag'] }}

  build-android:
    name: 🤖 Build and Assemble Android
    uses: ./.github/workflows/build_android.yml
    needs:
      - setup-build-variables
    with:
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      jvm-version: ${{ needs.setup-build-variables.outputs['jvm-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['linux-runner-tag'] }}

  build-ios:
    name: 🍏 Build iOS
    uses: ./.github/workflows/build_ios.yml
    needs:
      - setup-build-variables
    with:
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['macos-runner-tag'] }}

  build-linux:
    name: 🐧 Build Linux
    uses: ./.github/workflows/build_linux.yml
    needs:
      - setup-build-variables
    with:
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['linux-runner-tag'] }}

  build-macos:
    name: 🍎 Build macOS
    uses: ./.github/workflows/build_macos.yml
    needs:
      - setup-build-variables
    with:
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['macos-runner-tag'] }}

  build-windows:
    name: 🪟 Build Windows
    uses: ./.github/workflows/build_windows.yml
    needs:
      - setup-build-variables
    with:
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['windows-runner-tag'] }}

  assemble-macos:
    name: 🍎 Assemble macos
    uses: ./.github/workflows/assemble_macos.yml
    needs:
      - setup-build-variables
      - build-jvm
      - build-macos
    with:
      godot-kotlin-jvm-version: ${{ needs.setup-build-variables.outputs['godot-kotlin-jvm-version'] }}
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['macos-runner-tag'] }}

  assemble-ios:
    name: 🍏 Assemble ios
    uses: ./.github/workflows/assemble_ios.yml
    needs:
      - setup-build-variables
      - build-ios
    with:
      godot-kotlin-jvm-version: ${{ needs.setup-build-variables.outputs['godot-kotlin-jvm-version'] }}
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['macos-runner-tag'] }}

  assemble-linux:
    name: 🐧 Assemble linux
    uses: ./.github/workflows/assemble_linux.yml
    needs:
      - setup-build-variables
      - build-jvm
      - build-linux
    with:
      godot-kotlin-jvm-version: ${{ needs.setup-build-variables.outputs['godot-kotlin-jvm-version'] }}
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['linux-runner-tag'] }}

  assemble-windows:
    name: 🪟 Assemble windows
    uses: ./.github/workflows/assemble_windows.yml
    needs:
      - setup-build-variables
      - build-jvm
      - build-windows
    with:
      godot-kotlin-jvm-version: ${{ needs.setup-build-variables.outputs['godot-kotlin-jvm-version'] }}
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      # does not need to run on windows -> only packs a zip
      runner-tag: ${{ needs.get-runner-tags.outputs['linux-runner-tag'] }}

  assemble-export-templates:
    name: 🤖+🍏+🐧+🍎+🪟 Assemble export templates
    uses: ./.github/workflows/assemble_export_templates.yml
    needs:
      - setup-build-variables
      - build-android # uploads finished export template directly
      - assemble-ios # export templates need to be packed into xcode project
      - build-linux # uploads finished export template directly
      - assemble-macos # export templates need to be packed into app
      - build-windows # uploads finished export template directly
    with:
      godot-kotlin-jvm-version: ${{ needs.setup-build-variables.outputs['godot-kotlin-jvm-version'] }}
      godot-version: ${{ needs.setup-build-variables.outputs['godot-version'] }}
      runner-tag: ${{ needs.get-runner-tags.outputs['linux-runner-tag'] }}