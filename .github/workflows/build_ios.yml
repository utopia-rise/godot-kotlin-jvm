name: üçè iOS Builds
on:
  workflow_call:
    inputs:
      godot-version:
        type: string
      runner-tag:
        type: string

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-ios_build
  cancel-in-progress: true

jobs:
  ios-template:
    runs-on: ${{ inputs.runner-tag }}
    name: Build ios template (all)

    steps:
      - name: Clone Godot Engine
        uses: actions/checkout@v4
        with:
          repository: godotengine/godot
          ref: ${{ inputs.godot-version }}

      - name: Clone Godot JVM module.
        uses: actions/checkout@v4
        with:
          path: modules/kotlin_jvm

      - name: Setup Godot build cache (github hosted)
        uses: ./modules/kotlin_jvm/.github/actions/scons-cache
        continue-on-error: true
        if: contains(inputs.runner-tag, 'self-hosted') == false

      - name: Setup Godot build cache (self hosted)
        uses: corca-ai/local-cache@v2
        with:
          path: "${{github.workspace}}/.scons-cache/"
          key: "ios"
        if: contains(inputs.runner-tag, 'self-hosted') == true

      - name: Setup python and scons
        uses: ./.github/actions/godot-deps

      - name: Compilation release (arm64)
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }}
          platform: ios
          target: template_release

      - name: Compilation debug (arm64)
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }}
          platform: ios
          target: template_debug

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: export_template_ios_all
          path: "bin/*"
