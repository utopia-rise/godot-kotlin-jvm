name: Setup cache
description: Setup build cache.
inputs:
  key:
    description: The cache key (job name by default).
    default: "${{ github.job }}"
  path:
    description: The cache path.
    default: "${{ github.workspace }}/.scons-cache/"
  s3-user:
    description: Username of self-hosted s3
  s3-password:
    description: Password of self-hosted s3
  s3-host:
    description: Host of self-hosted s3
  s3-bucket:
    description: Bucket of self-hosted s3

runs:
  using: "composite"
  steps:
    - name: Log step
      run: echo "Running cache setup step"

    - name: Check if running on a fork
      id: check_fork
      run: |
        echo "Check if running on a fork: ${{ github.event.repository.fork }}"
        if [ "${{ github.event.repository.fork }}" = "true" ]; then
          echo "IS_FORK=true" >> $GITHUB_ENV
        else
          echo "IS_FORK=false" >> $GITHUB_ENV
        fi

    - name: Use regular cache action for forks
      if: env.IS_FORK == 'true'
      uses: actions/cache@v2
      with:
        path: ${{ inputs.path }}
        key: ${{ inputs.key }}

    - name: Setup minio client
      if: env.IS_FORK == 'false'
      run: |
        echo "Setting up minio client for S3 interaction"
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          choco install minio-client
        elif [[ "$RUNNER_OS" == "macOS" ]]; then
          brew install minio-mc
        else
          if ! command -v mc &> /dev/null; then
            wget https://dl.min.io/client/mc/release/linux-amd64/mc
            chmod +x mc
            sudo mv mc /usr/local/bin/
          fi
        fi

    - name: Setup S3 alias
      if: env.IS_FORK == 'false'
      run: |
        echo "Setting up alias for S3"
        mc alias set s3 ${{ inputs.s3-host }} ${{ inputs.s3-user }} ${{ inputs.s3-password }} || echo "Alias already set"

    - name: Copy cache from S3 if exists
      if: env.IS_FORK == 'false'
      run: |
        echo "Trying to restore cache with key ${{ inputs.key }} from S3"
        if mc ls s3/${{ inputs.s3-bucket }}/${{ inputs.key }} &> /dev/null; then
          mc cp -r s3/${{ inputs.s3-bucket }}/${{ inputs.key }} ${{ inputs.path }}
        else
          echo "No cache found on S3"
        fi

  post:
    steps:
      - name: Log post run step
        if: always() && env.IS_FORK == 'false'
        run: echo "Running post-run cleanup steps"

      - name: Copy cache to S3 if pipeline was successful
        if: always() && env.IS_FORK == 'false'
        run: |
          echo "Build was successful. Putting ${{ inputs.path }} to S3"
          if [[ "$GITHUB_WORKFLOW" == "completed" ]]; then
            mc cp -r ${{ inputs.path }} s3/${{ inputs.s3-bucket }}/${{ inputs.key }}
          fi

      - name: Unset S3 alias
        if: always() && env.IS_FORK == 'false'
        run: |
          echo "Removing S3 alias"
          mc alias rm s3
